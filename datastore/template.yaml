Parameters:
  VpcId:
    Type: String
  RookoutCluster:
    Type: String
  RookoutToken:
    Type: String
  RookoutCertificate:
    Type: String
  PublicSubnet1:
    Type: String
  PublicSubnet2:
    Type: String
  PrivateSubnet1:
    Type: String
  PrivateSubnet2:
    Type: String
  CPU:
    Type: String
  Memory:
    Type: String
  HostedZone:
    Type: String
  Domain:
    Type: String
Resources:
  DataStoreSG:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sg/template.yaml
      Parameters:
        VpcId:
          Ref: VpcId
  DataStoreALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: alb/template.yaml
      Parameters:
        PublicSubnet1:
          Ref: PublicSubnet1
        PublicSubnet2:
          Ref: PublicSubnet2
        RookoutDataStoreFargateServiceSecurityGroup:
          Fn::GetAtt: [ DataStoreSG, Outputs.RookoutDataStoreFargateServiceSecurityGroup ]
        RookoutDataStoreFargateServiceLBSecurityGroup:
          Fn::GetAtt: [ DataStoreSG, Outputs.RookoutDataStoreFargateServiceLBSecurityGroup ]
  DataStoreIAM:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: iam/template.yaml
  DataStoreFargate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: fargate/template.yaml
      Parameters:
        VpcId:
          Ref: VpcId
        RookoutToken:
          Ref: RookoutToken
        PrivateSubnet1:
          Ref: PrivateSubnet1
        PrivateSubnet2:
          Ref: PrivateSubnet2
        CPU:
          Ref: CPU
        Memory:
          Ref: Memory
        RookoutCluster:
          Ref: RookoutCluster
        RookoutCertificate:
          Ref: RookoutCertificate
        RookoutDataStoreFargateServiceSecurityGroup:
          Fn::GetAtt: [ DataStoreSG, Outputs.RookoutDataStoreFargateServiceSecurityGroup ]
        RookoutDataStoreFargateServiceTaskDefTaskRole:
          Fn::GetAtt: [ DataStoreIAM, Outputs.RookoutDataStoreFargateServiceTaskDefTaskRole ]
        RookoutDataStoreFargateServiceTaskDefExecutionRole:
          Fn::GetAtt: [ DataStoreIAM, Outputs.RookoutDataStoreFargateServiceTaskDefExecutionRole ]
        RookoutDataStoreFargateServiceLBArn:
          Fn::GetAtt: [ DataStoreALB, Outputs.RookoutDataStoreFargateServiceLBArn ]
  DataStoreRoute53:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: route53/template.yaml
      Parameters:
        HostedZone:
          Ref: HostedZone
        Domain:
          Ref: Domain
        RookoutDataStoreFargateServiceLBDNSName:
          Fn::GetAtt: [ DataStoreALB, Outputs.RookoutDataStoreFargateServiceLBDNSName ]
        RookoutDataStoreFargateServiceLBCanonicalHostedZoneID:
          Fn::GetAtt: [ DataStoreALB, Outputs.RookoutDataStoreFargateServiceLBCanonicalHostedZoneID ]
Outputs:
  DataStoreRoute53:
    Value:
      Fn::GetAtt: [ DataStoreRoute53, Outputs.DataStoreRoute53 ]