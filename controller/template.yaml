Parameters:
  VpcId:
    Type: String
  RookoutCluster:
    Type: String
  RookoutToken:
    Type: String
  RookoutCertificate:
    Type: String
  PublicSubnet1:
    Type: String
  PublicSubnet2:
    Type: String
  PrivateSubnet1:
    Type: String
  PrivateSubnet2:
    Type: String
  CPU:
    Type: String
  Memory:
    Type: String
  HostedZone:
    Type: String
  Domain:
    Type: String
Resources:
  ControllerSG:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sg/template.yaml
      Parameters:
        VpcId:
          Ref: VpcId
  ControllerALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: alb/template.yaml
      Parameters:
        PublicSubnet1:
          Ref: PublicSubnet1
        PublicSubnet2:
          Ref: PublicSubnet2
        RookoutControllerFargateServiceSecurityGroup:
          Fn::GetAtt: [ ControllerSG, Outputs.RookoutControllerFargateServiceSecurityGroup ]
        RookoutControllerFargateServiceLBSecurityGroup:
          Fn::GetAtt: [ ControllerSG, Outputs.RookoutControllerFargateServiceLBSecurityGroup ]
  ControllerIAM:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: iam/template.yaml
  ControllerFargate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: fargate/template.yaml
      Parameters:
        VpcId:
          Ref: VpcId
        RookoutToken:
          Ref: RookoutToken
        PrivateSubnet1:
          Ref: PrivateSubnet1
        PrivateSubnet2:
          Ref: PrivateSubnet2
        CPU:
          Ref: CPU
        Memory:
          Ref: Memory
        RookoutCluster:
          Ref: RookoutCluster
        RookoutCertificate:
          Ref: RookoutCertificate
        RookoutControllerFargateServiceSecurityGroup:
          Fn::GetAtt: [ ControllerSG, Outputs.RookoutControllerFargateServiceSecurityGroup ]
        RookoutControllerFargateServiceTaskDefTaskRole:
          Fn::GetAtt: [ ControllerIAM, Outputs.RookoutControllerFargateServiceTaskDefTaskRole ]
        RookoutControllerFargateServiceTaskDefExecutionRole:
          Fn::GetAtt: [ ControllerIAM, Outputs.RookoutControllerFargateServiceTaskDefExecutionRole ]
        RookoutControllerFargateServiceLBArn:
          Fn::GetAtt: [ ControllerALB, Outputs.RookoutControllerFargateServiceLBArn ]
  ControllerRoute53:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: route53/template.yaml
      Parameters:
        HostedZone:
          Ref: HostedZone
        Domain:
          Ref: Domain
        RookoutControllerFargateServiceLBDNSName:
          Fn::GetAtt: [ ControllerALB, Outputs.RookoutControllerFargateServiceLBDNSName ]
        RookoutControllerFargateServiceLBCanonicalHostedZoneID:
          Fn::GetAtt: [ ControllerALB, Outputs.RookoutControllerFargateServiceLBCanonicalHostedZoneID ]
Outputs:
  ControllerRoute53:
    Value:
      Fn::GetAtt: [ ControllerRoute53, Outputs.ControllerRoute53 ]